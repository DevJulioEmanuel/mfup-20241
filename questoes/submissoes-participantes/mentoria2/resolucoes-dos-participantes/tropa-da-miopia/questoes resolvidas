TROPA DA MIOPIA 
JULIO
ARTHUR
HENRIQUE
CARLOS NASCIMENTO

QUESTAO 01 :

#include <iostream>
 
using namespace std;
 
int main() {
 
    char nome[20];
    double vendas, montante;
    cout << fixed;
    cout.precision(2);
    cin >> nome >> vendas >> montante;
    cout << "TOTAL = R$ " << vendas + (0.15*montante) << endl;
 
    return 0;
}

QUESTAO 02 :

#include <iostream>
 
using namespace std;
 
int main() {
 
    double tempo, velocidade;
    cin >> tempo >> velocidade;
    cout << fixed;
    cout.precision(3);
    cout << (tempo*velocidade)/12 << endl;
 
    return 0;
}

QUESTAO 03 :

#include <iostream>
 
using namespace std;
 
int main() {
 
    int A, B, C, D;
    cin >> A >> B >> C >> D;
    if (B>C && D>A && (C+D)>(A+B) && C>=0 && D>=0 && A%2==0)
        cout << "Valores aceitos" << endl;
    else
        cout << "Valores nao aceitos" << endl;
 
    return 0;
}

QUESTAO 04 : 

#include <iostream>
using namespace std;
int main() {
 
    double n1, n2, n3, n4;
    cin >> n1 >> n2 >> n3 >> n4;
    double media;
    media = ((n1*2)+(n2*3)+(n3*4)+n4)/10;
    cout << fixed;
    cout.precision(1);
    cout << "Media: " << media << endl;
    
    if (media>=7) cout << "Aluno aprovado." << endl;
    else if (media<5) cout << "Aluno reprovado." << endl;
    else {
        cout << "Aluno em exame." << endl << "Nota do exame: ";
        double nota;
        cin >> nota;
        cout << nota << endl;
        media = (media+nota)/2;
        if (media>5) cout << "Aluno aprovado." << endl << "Media final: " << media << endl;
        else cout << "Aluno reprovado." << endl << "Media final: " << media << endl;
    } 
 
    return 0;
}

QUESTAO 05 :

#include <stdio.h>

int main() {
    int G =0, I=0, E=0, P=0;
    while (1) {
        if (P>0) {
            int confirm=1;
            printf("Novo grenal (1-sim 2-nao)\n");
            scanf("%d", &confirm);
            if (confirm==2) break;
        }
        int g, i;
        scanf("%d%d", &i, &g);
        if (g>i) G++;
        if (i>g) I++;
        if (i==g) E++;
        P++;
    }
    printf("%d grenais\nInter:%d\nGremio:%d\nEmpates:%d\n", P, I, G, E);
    if (G>I) printf("Gremio venceu mais\n");
    if (I>G) printf("Inter venceu mais\n");

    return 0;
}

QUESTAO 06 :

#include <stdio.h>
 
int main() {
 
    int n;
    scanf("%d", &n);
    
    for (int i=0; i<n; i++) {
        int num;
        scanf("%d", &num);
        long long int vetor[num];
        for (int j=0; j<num; j++) {
            if (j==0) {
                vetor[j]=1;
                continue;
            }
            if (j==1) {
                vetor[j]=1;
                continue;
            }
            if (j>1) {
                vetor[j] = vetor[j-2] + vetor[j-1];
            }
        }
        if (num>0) printf("Fib(%d) = %lld\n", num, vetor[num-1]);
        else printf("Fib(0) = 0\n");
        
    }
 
    return 0;
}

QUESTAO 07 :

#include <iostream>
using namespace std;
int main() {
 
    int n;
    cin >> n;
    int vet[n];
    for (int i=0; i<n; i++) cin >> vet[i];
    int me, pos;
    for (int i=0; i<n; i++) {
        if (i==0) {
            me = vet[i];
            pos = i;
        }
        if (vet[i]<me) {
            me = vet[i];
            pos = i;
        }
    }
    cout << "Menor valor: " << me << endl << "Posicao: " << pos << endl;
 
    return 0;
}

QUESTAO 08 :

#include <stdio.h>
#include <string.h>

int verif(char p1[10], char p2[10]) {
    if (strcmp(p1, p2)==0) {
        return (2);
    }
    if (strcmp(p1, "tesoura")==0&&strcmp(p2, "papel")==0) {
        return(0);
    }
    if (strcmp(p1, "papel")==0&&strcmp(p2, "pedra")==0) {
        return(0);
    }
    if (strcmp(p1, "pedra")==0&&strcmp(p2, "lagarto")==0) {
        return(0);
    }
    if (strcmp(p1, "lagarto")==0&&strcmp(p2, "Spock")==0) {
        return(0);
    }
    if (strcmp(p1, "Spock")==0&&strcmp(p2, "tesoura")==0) {
        return(0);
    }
    if (strcmp(p1, "tesoura")==0&&strcmp(p2, "lagarto")==0) {
        return(0);
    }
    if (strcmp(p1, "lagarto")==0&&strcmp(p2,"papel")==0) {
        return(0);
    }
    if (strcmp(p1, "papel")==0&&strcmp(p2, "Spock")==0) {
        return(0);
    }
    if (strcmp(p1, "Spock")==0&&strcmp(p2, "pedra")==0) {
        return(0);
    }
    if (strcmp(p1, "pedra")==0&&strcmp(p2, "tesoura")==0) {
        return(0);
    }
    
    return(1);
}

int main() {
    
    int n;
    scanf("%d", &n);
    
    for (int i=0; i<n; i++) {
        char p1[10], p2[10];
        scanf("%s", p1);
        scanf("%s", p2);
        
        int aux = verif(p1, p2);
        
        if (aux==0) printf("Caso #%d: Bazinga!\n", i+1);
        if (aux==1) printf("Caso #%d: Raj trapaceou!\n", i+1);
        if (aux==2) printf("Caso #%d: De novo!\n", i+1);

    } 
    
    return 0;
}

QUESTAO 09 :

#include <iostream>
using namespace std;
int main() {
    long long n;
    cin >> n;
    int vet[n];
    long long carneiros=0;
    for (int i=0; i<n; i++) {
        cin >> vet[i];
        carneiros += vet[i];
    }
    long long i=0;
    long long cont=0;
    int estrelas[n] = {0};
    while (true) {
        if (vet[i]>0) carneiros--;
        if (estrelas[i]==0) {
            estrelas[i] = -1;
            cont++;
        }
        if (vet[i]%2==0) {
            i--;
            if (vet[i+1]>0) vet[i+1]--;
        } else {
            if (vet[i]%2!=0) {
            i++;
            if (vet[i-1]>0) vet[i-1]--;
        }
        }
        if (i<0 || i>=n) break;
    }
    
    cout << cont << " " << carneiros << endl;
    

    return 0;
}

QUESTAO 10 :

#include <stdio.h>

int main() {
    
    int num;
    int soma;
    scanf("%d%d", &num, &soma);
    int vet[num];
    for (int i=0; i<num; i++) scanf("%d", &vet[i]);
    int cont=0;
    for (int i=0; i<num; i++) {
        int aux=0, S=0;
        for (int j=i; j<num; j++) {
            S += vet[j];
            if (S>soma) break;
            if (S==soma) cont++;
            aux++;
        }
    }
    printf("%d\n", cont);
    
    return 0;
}

QUESTAO 11 :

// Online C++ compiler to run C++ program online
#include <iostream>
using namespace std;
int main() {
    int n1, n2;
    cin >> n1 >> n2;
    int vet1[n1];
    for (int i=0; i<n1; i++) cin >> vet1[i];
    int vet2[n2];
    for (int i=0; i<n2; i++) cin >> vet2[i];
    int senha[10]={0};
    int inicio = 0, fim = 0;
    senha[vet1[0]]++;
    for (int i=0; i<n2-1; i++) {
        inicio = vet2[i];
        fim = vet2[i+1];
        //cout << inicio << " " << fim << endl;
        if (inicio<fim) {
            for (int j=inicio+1; j<=fim; j++) {
                senha[vet1[j-1]]++;
            }
        } else {
            for (int j=inicio-1; j>=fim; j--) {
                senha[vet1[j-1]]++;
            }
        }
    }
    //cout << endl;
    for (int a=0; a<10; a++) {
        cout << senha[a] << " ";
    } 
    
    return 0;
}


QUESTAO 12 :

[QUESTAO DIFICIL, NAO CONSEGUIMOS FAZER]

